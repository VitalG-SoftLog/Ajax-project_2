//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace ReportBuilderAjax.Web
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MsiclaimEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MsiclaimEntities object using the connection string found in the 'MsiclaimEntities' section of the application configuration file.
        /// </summary>
        public MsiclaimEntities() : base("name=MsiclaimEntities", "MsiclaimEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MsiclaimEntities object.
        /// </summary>
        public MsiclaimEntities(string connectionString) : base(connectionString, "MsiclaimEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MsiclaimEntities object.
        /// </summary>
        public MsiclaimEntities(EntityConnection connection) : base(connection, "MsiclaimEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserLogin> UserLoginSet
        {
            get
            {
                if ((_UserLoginSet == null))
                {
                    _UserLoginSet = base.CreateObjectSet<UserLogin>("UserLoginSet");
                }
                return _UserLoginSet;
            }
        }
        private ObjectSet<UserLogin> _UserLoginSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserAssnView> UserAssnView
        {
            get
            {
                if ((_UserAssnView == null))
                {
                    _UserAssnView = base.CreateObjectSet<UserAssnView>("UserAssnView");
                }
                return _UserAssnView;
            }
        }
        private ObjectSet<UserAssnView> _UserAssnView;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserLoginSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserLoginSet(UserLogin userLogin)
        {
            base.AddObject("UserLoginSet", userLogin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserAssnView EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserAssnView(UserAssnView userAssnView)
        {
            base.AddObject("UserAssnView", userAssnView);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userId">No Metadata Documentation available.</param>
        public ObjectResult<UserLogin> GetUser(global::System.String userId)
        {
            ObjectParameter userIdParameter;
            if (userId != null)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<UserLogin>("GetUser", userIdParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="userId">No Metadata Documentation available.</param>
        public ObjectResult<UserLogin> GetUser(global::System.String userId, MergeOption mergeOption)
        {
            ObjectParameter userIdParameter;
            if (userId != null)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<UserLogin>("GetUser", mergeOption, userIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userId">No Metadata Documentation available.</param>
        /// <param name="passwd">No Metadata Documentation available.</param>
        /// <param name="assnNum">No Metadata Documentation available.</param>
        public ObjectResult<UserLogin> GetUser2(global::System.String userId, global::System.String passwd, global::System.String assnNum)
        {
            ObjectParameter userIdParameter;
            if (userId != null)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.String));
            }
    
            ObjectParameter passwdParameter;
            if (passwd != null)
            {
                passwdParameter = new ObjectParameter("Passwd", passwd);
            }
            else
            {
                passwdParameter = new ObjectParameter("Passwd", typeof(global::System.String));
            }
    
            ObjectParameter assnNumParameter;
            if (assnNum != null)
            {
                assnNumParameter = new ObjectParameter("AssnNum", assnNum);
            }
            else
            {
                assnNumParameter = new ObjectParameter("AssnNum", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<UserLogin>("GetUser2", userIdParameter, passwdParameter, assnNumParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="userId">No Metadata Documentation available.</param>
        /// <param name="passwd">No Metadata Documentation available.</param>
        /// <param name="assnNum">No Metadata Documentation available.</param>
        public ObjectResult<UserLogin> GetUser2(global::System.String userId, global::System.String passwd, global::System.String assnNum, MergeOption mergeOption)
        {
            ObjectParameter userIdParameter;
            if (userId != null)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.String));
            }
    
            ObjectParameter passwdParameter;
            if (passwd != null)
            {
                passwdParameter = new ObjectParameter("Passwd", passwd);
            }
            else
            {
                passwdParameter = new ObjectParameter("Passwd", typeof(global::System.String));
            }
    
            ObjectParameter assnNumParameter;
            if (assnNum != null)
            {
                assnNumParameter = new ObjectParameter("AssnNum", assnNum);
            }
            else
            {
                assnNumParameter = new ObjectParameter("AssnNum", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<UserLogin>("GetUser2", mergeOption, userIdParameter, passwdParameter, assnNumParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userid">No Metadata Documentation available.</param>
        public ObjectResult<UserAssnView> GetUserAssn(global::System.String userid)
        {
            ObjectParameter useridParameter;
            if (userid != null)
            {
                useridParameter = new ObjectParameter("userid", userid);
            }
            else
            {
                useridParameter = new ObjectParameter("userid", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<UserAssnView>("GetUserAssn", useridParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="userid">No Metadata Documentation available.</param>
        public ObjectResult<UserAssnView> GetUserAssn(global::System.String userid, MergeOption mergeOption)
        {
            ObjectParameter useridParameter;
            if (userid != null)
            {
                useridParameter = new ObjectParameter("userid", userid);
            }
            else
            {
                useridParameter = new ObjectParameter("userid", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<UserAssnView>("GetUserAssn", mergeOption, useridParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MsiclaimModel", Name="UserAssnView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserAssnView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserAssnView object.
        /// </summary>
        /// <param name="assnNum">Initial value of the AssnNum property.</param>
        public static UserAssnView CreateUserAssnView(global::System.String assnNum)
        {
            UserAssnView userAssnView = new UserAssnView();
            userAssnView.AssnNum = assnNum;
            return userAssnView;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AssnNum
        {
            get
            {
                return _AssnNum;
            }
            set
            {
                if (_AssnNum != value)
                {
                    OnAssnNumChanging(value);
                    ReportPropertyChanging("AssnNum");
                    _AssnNum = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AssnNum");
                    OnAssnNumChanged();
                }
            }
        }
        private global::System.String _AssnNum;
        partial void OnAssnNumChanging(global::System.String value);
        partial void OnAssnNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AssnName
        {
            get
            {
                return _AssnName;
            }
            set
            {
                OnAssnNameChanging(value);
                ReportPropertyChanging("AssnName");
                _AssnName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AssnName");
                OnAssnNameChanged();
            }
        }
        private global::System.String _AssnName;
        partial void OnAssnNameChanging(global::System.String value);
        partial void OnAssnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IsStandalone
        {
            get
            {
                return _IsStandalone;
            }
            set
            {
                OnIsStandaloneChanging(value);
                ReportPropertyChanging("IsStandalone");
                _IsStandalone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IsStandalone");
                OnIsStandaloneChanged();
            }
        }
        private global::System.String _IsStandalone;
        partial void OnIsStandaloneChanging(global::System.String value);
        partial void OnIsStandaloneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AssnLongName
        {
            get
            {
                return _AssnLongName;
            }
            set
            {
                OnAssnLongNameChanging(value);
                ReportPropertyChanging("AssnLongName");
                _AssnLongName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AssnLongName");
                OnAssnLongNameChanged();
            }
        }
        private global::System.String _AssnLongName;
        partial void OnAssnLongNameChanging(global::System.String value);
        partial void OnAssnLongNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MsiclaimModel", Name="UserLogin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserLogin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserLogin object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="domainLogin">Initial value of the DomainLogin property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="emailAddress">Initial value of the EmailAddress property.</param>
        /// <param name="failedLoginAttempts">Initial value of the FailedLoginAttempts property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static UserLogin CreateUserLogin(global::System.String userID, global::System.String domainLogin, global::System.String lastName, global::System.String firstName, global::System.String emailAddress, global::System.Int32 failedLoginAttempts, global::System.String isActive)
        {
            UserLogin userLogin = new UserLogin();
            userLogin.UserID = userID;
            userLogin.DomainLogin = domainLogin;
            userLogin.LastName = lastName;
            userLogin.FirstName = firstName;
            userLogin.EmailAddress = emailAddress;
            userLogin.FailedLoginAttempts = failedLoginAttempts;
            userLogin.IsActive = isActive;
            return userLogin;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ID;
        partial void OnIDChanging(Nullable<global::System.Int32> value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DomainLogin
        {
            get
            {
                return _DomainLogin;
            }
            set
            {
                if (_DomainLogin != value)
                {
                    OnDomainLoginChanging(value);
                    ReportPropertyChanging("DomainLogin");
                    _DomainLogin = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DomainLogin");
                    OnDomainLoginChanged();
                }
            }
        }
        private global::System.String _DomainLogin;
        partial void OnDomainLoginChanging(global::System.String value);
        partial void OnDomainLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                if (_LastName != value)
                {
                    OnLastNameChanging(value);
                    ReportPropertyChanging("LastName");
                    _LastName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LastName");
                    OnLastNameChanged();
                }
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                if (_FirstName != value)
                {
                    OnFirstNameChanging(value);
                    ReportPropertyChanging("FirstName");
                    _FirstName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FirstName");
                    OnFirstNameChanged();
                }
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IsAdministrator
        {
            get
            {
                return _IsAdministrator;
            }
            set
            {
                OnIsAdministratorChanging(value);
                ReportPropertyChanging("IsAdministrator");
                _IsAdministrator = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IsAdministrator");
                OnIsAdministratorChanged();
            }
        }
        private global::System.String _IsAdministrator;
        partial void OnIsAdministratorChanging(global::System.String value);
        partial void OnIsAdministratorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                if (_EmailAddress != value)
                {
                    OnEmailAddressChanging(value);
                    ReportPropertyChanging("EmailAddress");
                    _EmailAddress = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EmailAddress");
                    OnEmailAddressChanged();
                }
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PasswordChangedDate
        {
            get
            {
                return _PasswordChangedDate;
            }
            set
            {
                OnPasswordChangedDateChanging(value);
                ReportPropertyChanging("PasswordChangedDate");
                _PasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordChangedDate");
                OnPasswordChangedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PasswordChangedDate;
        partial void OnPasswordChangedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedLoginAttempts
        {
            get
            {
                return _FailedLoginAttempts;
            }
            set
            {
                if (_FailedLoginAttempts != value)
                {
                    OnFailedLoginAttemptsChanging(value);
                    ReportPropertyChanging("FailedLoginAttempts");
                    _FailedLoginAttempts = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FailedLoginAttempts");
                    OnFailedLoginAttemptsChanged();
                }
            }
        }
        private global::System.Int32 _FailedLoginAttempts;
        partial void OnFailedLoginAttemptsChanging(global::System.Int32 value);
        partial void OnFailedLoginAttemptsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                if (_IsActive != value)
                {
                    OnIsActiveChanging(value);
                    ReportPropertyChanging("IsActive");
                    _IsActive = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("IsActive");
                    OnIsActiveChanged();
                }
            }
        }
        private global::System.String _IsActive;
        partial void OnIsActiveChanging(global::System.String value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DefaultAssn
        {
            get
            {
                return _DefaultAssn;
            }
            set
            {
                OnDefaultAssnChanging(value);
                ReportPropertyChanging("DefaultAssn");
                _DefaultAssn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DefaultAssn");
                OnDefaultAssnChanged();
            }
        }
        private global::System.String _DefaultAssn;
        partial void OnDefaultAssnChanging(global::System.String value);
        partial void OnDefaultAssnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DefaultCoverage
        {
            get
            {
                return _DefaultCoverage;
            }
            set
            {
                OnDefaultCoverageChanging(value);
                ReportPropertyChanging("DefaultCoverage");
                _DefaultCoverage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DefaultCoverage");
                OnDefaultCoverageChanged();
            }
        }
        private global::System.String _DefaultCoverage;
        partial void OnDefaultCoverageChanging(global::System.String value);
        partial void OnDefaultCoverageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DefaultAssnJoin
        {
            get
            {
                return _DefaultAssnJoin;
            }
            set
            {
                OnDefaultAssnJoinChanging(value);
                ReportPropertyChanging("DefaultAssnJoin");
                _DefaultAssnJoin = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DefaultAssnJoin");
                OnDefaultAssnJoinChanged();
            }
        }
        private global::System.String _DefaultAssnJoin;
        partial void OnDefaultAssnJoinChanging(global::System.String value);
        partial void OnDefaultAssnJoinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DefaultCoverageJoin
        {
            get
            {
                return _DefaultCoverageJoin;
            }
            set
            {
                OnDefaultCoverageJoinChanging(value);
                ReportPropertyChanging("DefaultCoverageJoin");
                _DefaultCoverageJoin = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DefaultCoverageJoin");
                OnDefaultCoverageJoinChanged();
            }
        }
        private global::System.String _DefaultCoverageJoin;
        partial void OnDefaultCoverageJoinChanging(global::System.String value);
        partial void OnDefaultCoverageJoinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AssnName
        {
            get
            {
                return _AssnName;
            }
            set
            {
                OnAssnNameChanging(value);
                ReportPropertyChanging("AssnName");
                _AssnName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AssnName");
                OnAssnNameChanged();
            }
        }
        private global::System.String _AssnName;
        partial void OnAssnNameChanging(global::System.String value);
        partial void OnAssnNameChanged();

        #endregion
    
    }

    #endregion
    
}
